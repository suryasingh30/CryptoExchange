{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://E%3A/jsHarkirat-1-main/CryptoExchange/app/utils/httpClients.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport {Depth, KLine, Ticker, Trade} from './types';\r\nimport { resolve } from \"path\";\r\n\r\nconst BASE_URL = \"https://api.backpack.exchange/api/v1\";\r\n\r\nexport async function getTickers(): Promise<Ticker[]> {\r\n    const response = await axios.get(`${BASE_URL}/tickers`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getTicker(market: string): Promise<Ticker>{\r\n    const tickers = await getTickers();\r\n    const ticker = tickers.find(t => t.symbol === market);  \r\n    if(!ticker)\r\n    {\r\n        throw new Promise(resolve => setTimeout(resolve, 1000));\r\n    }\r\n    return ticker;\r\n}\r\n// const x = getTickers()\r\n\r\nexport async function getDepth(market: string): Promise<Depth>{\r\n    const response = await axios.get(`${BASE_URL}/depth?symbol=${market}`)\r\n    return response.data;\r\n}\r\n\r\nexport async function getTrades(market:string): Promise<Trade[]>{\r\n    const response = await axios.get(`${BASE_URL}/trade?symbol=${market}`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getKlines(market:string, interval: string, startTime: number, endTime: number): Promise<KLine[]> {\r\n    const response = await axios.get(`${BASE_URL}/klines?symbol=${market}&interval=${interval}&startTime=${startTime}&endTime=${endTime}`);\r\n    const data: KLine[] = response.data;\r\n    return data.sort((x,y) => (Number(x.end) < Number(y.end) ? -1: 1));\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAIA,MAAM,WAAW;AAEV,eAAe;IAClB,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,QAAQ,CAAC;IACtD,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,UAAU,MAAc;IAC1C,MAAM,UAAU,MAAM;IACtB,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK;IAC9C,IAAG,CAAC,QACJ;QACI,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACrD;IACA,OAAO;AACX;AAGO,eAAe,SAAS,MAAc;IACzC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,cAAc,EAAE,QAAQ;IACrE,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,UAAU,MAAa;IACzC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,cAAc,EAAE,QAAQ;IACrE,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,UAAU,MAAa,EAAE,QAAgB,EAAE,SAAiB,EAAE,OAAe;IAC/F,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,eAAe,EAAE,OAAO,UAAU,EAAE,SAAS,WAAW,EAAE,UAAU,SAAS,EAAE,SAAS;IACrI,MAAM,OAAgB,SAAS,IAAI;IACnC,OAAO,KAAK,IAAI,CAAC,CAAC,GAAE,IAAO,OAAO,EAAE,GAAG,IAAI,OAAO,EAAE,GAAG,IAAI,CAAC,IAAG;AACnE"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file://E%3A/jsHarkirat-1-main/CryptoExchange/app/components/depth/BidTable.tsx"],"sourcesContent":["export const BidTable = ({bids}: {bids: [string, string][]}) => {\r\n    let currentotal = 0;\r\n    const releventBids = bids.slice(0,15);\r\n    const bidsWithTotal: [string,string,number][] = releventBids.map(([price, quantity]) => [price, quantity, currentotal+=Number(quantity)]);\r\n    const maxTotal = releventBids.reduce((acc, [_, quantity]) => acc + Number(quantity), 0);\r\n\r\n    return <div>\r\n        {bidsWithTotal.map(([price, quantity, total]) => <Bid\r\n            price={price} quantity={quantity} total={total} maxTotal={maxTotal}\r\n        >\r\n        </Bid>) }\r\n    </div>\r\n}\r\n\r\nconst Bid = ({price, quantity, total, maxTotal} : {price: string, quantity: string, total: number, maxTotal:  number}) => {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            background: \"ttransport\",\r\n            overflow: \"hidden\"\r\n        }}>\r\n            <div\r\n                style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: `${(100 * total) / maxTotal}%`,\r\n                height: \"100%\",\r\n                background: \"rgba(1, 167, 129, 0.325)\",\r\n                transition: \"width 0.3s ease-in-out\",\r\n                }}\r\n            ></div>\r\n            <div className={`flex justify-between text-xs w-full`}>\r\n                <div>\r\n                    {price}\r\n                </div>\r\n                <div>\r\n                    {quantity}\r\n                </div>\r\n                <div>\r\n                    {total.toFixed(2)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;;AAAO,MAAM,WAAW,CAAC,EAAC,IAAI,EAA6B;IACvD,IAAI,cAAc;IAClB,MAAM,eAAe,KAAK,KAAK,CAAC,GAAE;IAClC,MAAM,gBAA0C,aAAa,GAAG,CAAC,CAAC,CAAC,OAAO,SAAS,GAAK;YAAC;YAAO;YAAU,eAAa,OAAO;SAAU;IACxI,MAAM,WAAW,aAAa,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,GAAK,MAAM,OAAO,WAAW;IAErF,qBAAO,8OAAC;kBACH,cAAc,GAAG,CAAC,CAAC,CAAC,OAAO,UAAU,MAAM,iBAAK,8OAAC;gBAC9C,OAAO;gBAAO,UAAU;gBAAU,OAAO;gBAAO,UAAU;;;;;;;;;;;AAItE;AAEA,MAAM,MAAM,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAuE;IACjH,qBACI,8OAAC;QAAI,OAAO;YACR,SAAS;YACT,UAAU;YACV,OAAO;YACP,YAAY;YACZ,UAAU;QACd;;0BACI,8OAAC;gBACG,OAAO;oBACP,UAAU;oBACV,KAAK;oBACL,MAAM;oBACN,OAAO,GAAG,AAAC,MAAM,QAAS,SAAS,CAAC,CAAC;oBACrC,QAAQ;oBACR,YAAY;oBACZ,YAAY;gBACZ;;;;;;0BAEJ,8OAAC;gBAAI,WAAW,CAAC,mCAAmC,CAAC;;kCACjD,8OAAC;kCACI;;;;;;kCAEL,8OAAC;kCACI;;;;;;kCAEL,8OAAC;kCACI,MAAM,OAAO,CAAC;;;;;;;;;;;;;;;;;;AAKnC"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file://E%3A/jsHarkirat-1-main/CryptoExchange/app/components/depth/AskTable.tsx"],"sourcesContent":["export const AskTable = ({asks}: {asks: [string,string][]}) => {\r\n\r\n    let currentotal = 0;\r\n    const relevantAsk = asks.slice(0,15);\r\n    // relevantAsk.reverse();\r\n\r\n    let askWithTotal: [string, string, number][] = [];\r\n    for(let i=0; i<relevantAsk.length; i++)\r\n    {\r\n        const [price, quantity] = relevantAsk[i];\r\n        askWithTotal.push([price, quantity, currentotal+=Number(quantity)]);\r\n    }\r\n    const maxTotal = relevantAsk.reduce((acc, [_,quantity]) => acc + Number(quantity), 0);\r\n\r\n    askWithTotal.reverse();\r\n\r\n    return <div>\r\n        {askWithTotal.map(([price, quanity, total]) => <Ask\r\n            price={price}quantity={quanity} total={total} maxTotal={maxTotal}\r\n        ></Ask>)}\r\n    </div>\r\n}\r\n\r\nconst Ask = ({price, quantity, total, maxTotal}: {price: string, quantity: string, total: number, maxTotal: number}) => {\r\n    return <div\r\n        style={{\r\n            display: \"flex\",\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            backgroundColor: \"transparent\",\r\n            overflow: \"hidden\",\r\n        }}>\r\n        <div\r\n            style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: `${(total * 100)/maxTotal}%`,\r\n                height: \"100%\",\r\n                background: \"rgba(228,75,68,0.325)\",\r\n                transition: \"width 0.3s ease-in-out\"\r\n            }}>\r\n        </div>\r\n        <div className=\"flex justify-between text-xs w-full\">\r\n            <div>\r\n                {price}\r\n            </div>\r\n            <div>\r\n                {quantity}\r\n            </div>\r\n            <div>\r\n                {total?.toFixed(2)}\r\n            </div>\r\n        </div>\r\n    </div>\r\n} "],"names":[],"mappings":";;;;;AAAO,MAAM,WAAW,CAAC,EAAC,IAAI,EAA4B;IAEtD,IAAI,cAAc;IAClB,MAAM,cAAc,KAAK,KAAK,CAAC,GAAE;IACjC,yBAAyB;IAEzB,IAAI,eAA2C,EAAE;IACjD,IAAI,IAAI,IAAE,GAAG,IAAE,YAAY,MAAM,EAAE,IACnC;QACI,MAAM,CAAC,OAAO,SAAS,GAAG,WAAW,CAAC,EAAE;QACxC,aAAa,IAAI,CAAC;YAAC;YAAO;YAAU,eAAa,OAAO;SAAU;IACtE;IACA,MAAM,WAAW,YAAY,MAAM,CAAC,CAAC,KAAK,CAAC,GAAE,SAAS,GAAK,MAAM,OAAO,WAAW;IAEnF,aAAa,OAAO;IAEpB,qBAAO,8OAAC;kBACH,aAAa,GAAG,CAAC,CAAC,CAAC,OAAO,SAAS,MAAM,iBAAK,8OAAC;gBAC5C,OAAO;gBAAM,UAAU;gBAAS,OAAO;gBAAO,UAAU;;;;;;;;;;;AAGpE;AAEA,MAAM,MAAM,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAqE;IAC/G,qBAAO,8OAAC;QACJ,OAAO;YACH,SAAS;YACT,UAAU;YACV,OAAO;YACP,iBAAiB;YACjB,UAAU;QACd;;0BACA,8OAAC;gBACG,OAAO;oBACH,UAAU;oBACV,KAAK;oBACL,MAAM;oBACN,OAAO,GAAG,AAAC,QAAQ,MAAK,SAAS,CAAC,CAAC;oBACnC,QAAQ;oBACR,YAAY;oBACZ,YAAY;gBAChB;;;;;;0BAEJ,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;kCACI;;;;;;kCAEL,8OAAC;kCACI;;;;;;kCAEL,8OAAC;kCACI,OAAO,QAAQ;;;;;;;;;;;;;;;;;;AAIhC"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file://E%3A/jsHarkirat-1-main/CryptoExchange/app/components/depth/Depth.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getDepth, getKlines, getTicker, getTrades } from \"@/app/utils/httpClients\";\r\nimport { BidTable } from \"./BidTable\";\r\nimport { AskTable } from \"./AskTable\";\r\n\r\nexport const Depth = async({market} : {market:string}) => {\r\n    const [bids, setBids] = useState<[string,string][]>();\r\n    const [asks, setAsks] = useState<[string,string][]>();\r\n    const [price, setPrice] = useState<string>();\r\n\r\n    const depth = await getDepth(market).then(d => {\r\n        setBids(d.bids.reverse());\r\n        setAsks(d.asks);\r\n    });\r\n\r\n    getTicker(market).then(t => setPrice(t.lastPrice));\r\n\r\n    return <div>\r\n        <TableHeader/>\r\n        {asks && <AskTable asks={asks}/>}\r\n        {price && <div>{price}</div>}\r\n        {bids && <BidTable bids={bids}/>}\r\n    </div>\r\n}\r\n\r\nfunction TableHeader(){\r\n    return <div className=\"flex justify-between tet-xs\">\r\n        <div className=\"text-white\">Price</div>\r\n        <div className=\"text-slate-500\">Size</div>\r\n        <div className=\"text-slate-500\">Total</div>\r\n    </div>\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEO,MAAM,QAAQ,OAAM,EAAC,MAAM,EAAmB;IACjD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAC/B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAC/B,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAEjC,MAAM,QAAQ,MAAM,CAAA,GAAA,2HAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,IAAI,CAAC,CAAA;QACtC,QAAQ,EAAE,IAAI,CAAC,OAAO;QACtB,QAAQ,EAAE,IAAI;IAClB;IAEA,CAAA,GAAA,2HAAA,CAAA,YAAS,AAAD,EAAE,QAAQ,IAAI,CAAC,CAAA,IAAK,SAAS,EAAE,SAAS;IAEhD,qBAAO,8OAAC;;0BACJ,8OAAC;;;;;YACA,sBAAQ,8OAAC,uIAAA,CAAA,WAAQ;gBAAC,MAAM;;;;;;YACxB,uBAAS,8OAAC;0BAAK;;;;;;YACf,sBAAQ,8OAAC,uIAAA,CAAA,WAAQ;gBAAC,MAAM;;;;;;;;;;;;AAEjC;AAEA,SAAS;IACL,qBAAO,8OAAC;QAAI,WAAU;;0BAClB,8OAAC;gBAAI,WAAU;0BAAa;;;;;;0BAC5B,8OAAC;gBAAI,WAAU;0BAAiB;;;;;;0BAChC,8OAAC;gBAAI,WAAU;0BAAiB;;;;;;;;;;;;AAExC"}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":["file://E%3A/jsHarkirat-1-main/CryptoExchange/app/trade/%5Bmarket%5D/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { MarketBar } from \"@/app/components/MarketBar\";\r\nimport { useParams } from \"next/navigation\";\r\nimport { TradeView } from \"@/app/components/TradeView\";\r\nimport { Depth } from \"@/app/components/depth/Depth\";\r\nimport { SwapUI } from \"@/app/components/SwapUI\";\r\n\r\nexport default function Page(){\r\n\r\n    const {market} = useParams();\r\n    console.log({market});\r\n    return <div className=\"flex flex-roow flex-1\">\r\n        <div className=\"flex flex-col flex-1\">\r\n            {/* <MarketBar market={market as string}/> */}\r\n            <div>\r\n                <div>\r\n                    {/* <TradeView market={market as string}/> */}\r\n                </div>\r\n                <div>\r\n                    <Depth market={market as string}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                {/* <SwapUI market={market as string}/> */}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAQe,SAAS;IAEpB,MAAM,EAAC,MAAM,EAAC,GAAG,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACzB,QAAQ,GAAG,CAAC;QAAC;IAAM;IACnB,qBAAO,8OAAC;QAAI,WAAU;;0BAClB,8OAAC;gBAAI,WAAU;0BAEX,cAAA,8OAAC;;sCACG,8OAAC;;;;;sCAGD,8OAAC;sCACG,cAAA,8OAAC,oIAAA,CAAA,QAAK;gCAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;0BAI3B,8OAAC;0BACG,cAAA,8OAAC;;;;;;;;;;;;;;;;AAMb"}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}