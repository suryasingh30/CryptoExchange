{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://E%3A/jsHarkirat-1-main/CryptoExchange/frontend/app/utils/httpClients.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport {Depth, KLine, Ticker, Trade} from './types';\r\nimport { resolve } from \"path\";\r\nimport cors from 'cors';\r\n\r\nconst BASE_URL = \"https://api.backpack.exchange/api/v1\";\r\n\r\nexport async function getTickers(): Promise<Ticker[]> {\r\n    // const response = await axios.get(`${BASE_URL}/tickers`);\r\n    // return response.data;\r\n    const response = await axios.get('/api/tickers');\r\n    return response.data;\r\n}\r\n\r\nexport async function getTicker(market: string): Promise<Ticker>{\r\n    const tickers = await getTickers();\r\n    const ticker = tickers.find(t => t.symbol === market);  \r\n    if(!ticker)\r\n    {\r\n        throw new Promise(resolve => setTimeout(resolve, 1000));\r\n    }\r\n    return ticker;\r\n}\r\n// const x = getTickers()\r\n\r\nexport async function getDepth(market: string): Promise<Depth>{\r\n    const response = await axios.get(`${BASE_URL}/depth?symbol=${market}`)\r\n    return response.data;\r\n}\r\n\r\nexport async function getTrades(market:string): Promise<Trade[]>{\r\n    const response = await axios.get(`${BASE_URL}/trade?symbol=${market}`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getKlines(market:string, interval: string, startTime: number, endTime: number): Promise<KLine[]> {\r\n    const response = await axios.get(`${BASE_URL}/klines?symbol=${market}&interval=${interval}&startTime=${startTime}&endTime=${endTime}`);\r\n    const data: KLine[] = response.data;\r\n    return data.sort((x,y) => (Number(x.end) < Number(y.end) ? -1: 1));\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAKA,MAAM,WAAW;AAEV,eAAe;IAClB,2DAA2D;IAC3D,wBAAwB;IACxB,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;IACjC,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,UAAU,MAAc;IAC1C,MAAM,UAAU,MAAM;IACtB,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK;IAC9C,IAAG,CAAC,QACJ;QACI,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACrD;IACA,OAAO;AACX;AAGO,eAAe,SAAS,MAAc;IACzC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,cAAc,EAAE,QAAQ;IACrE,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,UAAU,MAAa;IACzC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,cAAc,EAAE,QAAQ;IACrE,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,UAAU,MAAa,EAAE,QAAgB,EAAE,SAAiB,EAAE,OAAe;IAC/F,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,eAAe,EAAE,OAAO,UAAU,EAAE,SAAS,WAAW,EAAE,UAAU,SAAS,EAAE,SAAS;IACrI,MAAM,OAAgB,SAAS,IAAI;IACnC,OAAO,KAAK,IAAI,CAAC,CAAC,GAAE,IAAO,OAAO,EAAE,GAAG,IAAI,OAAO,EAAE,GAAG,IAAI,CAAC,IAAG;AACnE"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file://E%3A/jsHarkirat-1-main/CryptoExchange/frontend/app/components/Markets.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport {Ticker} from \"../utils/types\";\r\nimport { getTickers } from \"../utils/httpClients\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport const Markets = () => {\r\n    const [tickers, setTickers] = useState<Ticker[]>();\r\n\r\n    useEffect(() => {\r\n        getTickers().then((m)=>setTickers(m));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex flex-col flex-1 max-w-[1280px] w-full\">\r\n            <div className=\"flex flex-col min-w-[720px] flex-1 w-full\">\r\n                <div className=\"flex flex-col w-full rounded-lg bg-baseBackgroundL1 px-5 py-3\">\r\n                    <table className=\"w-full table-auto\">\r\n                        <MarketHeader/>\r\n                        {tickers?.map((m) => (\r\n                            <MarketRow key={m.symbol} market={m} />\r\n                            ))}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction MarketRow({market} : {market: Ticker}){\r\n    const router = useRouter();\r\n    return (\r\n        <tr className=\"cursor-pointer border-t border-baseBorderLight hover:bg-white/7 w-full\" onClick={() => router.push(`/trade/${market.symbol}`)}>\r\n            <td>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <div>\r\n                                <img/>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <p>\r\n                                {market.symbol}\r\n                            </p>\r\n                            <div>\r\n                                <p>\r\n                                    {market.symbol}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <p>{market.lastPrice}</p>\r\n            </td>\r\n            <td>\r\n                <p>{market.high}</p>\r\n            </td>\r\n            <td>\r\n                <p>{market.volume}</p>\r\n            </td>\r\n            <td>\r\n                <p>{Number(market.priceChangePercent)?.toFixed(3)}%</p>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nfunction MarketHeader(){\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    <div>\r\n                        Name<span></span>\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div>\r\n                        Price<span></span>\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div>\r\n                        Market Cap<span></span>\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div>\r\n                        24th Volume\r\n                        <svg>\r\n                            <path></path>\r\n                            <path></path>\r\n                        </svg>\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div>\r\n                        24th Change<span></span>\r\n                    </div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AALA;;;;;AAOO,MAAM,UAAU;IACnB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAErC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,CAAA,GAAA,2HAAA,CAAA,aAAU,AAAD,IAAI,IAAI,CAAC,CAAC,IAAI,WAAW;IACtC,GAAG,EAAE;IAEL,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAM,WAAU;;sCACb,8OAAC;;;;;wBACA,SAAS,IAAI,CAAC,kBACX,8OAAC;gCAAyB,QAAQ;+BAAlB,EAAE,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AAOpD;AAEA,SAAS,UAAU,EAAC,MAAM,EAAoB;IAC1C,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;IACvB,qBACI,8OAAC;QAAG,WAAU;QAAyE,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,OAAO,MAAM,EAAE;;0BACvI,8OAAC;0BACG,cAAA,8OAAC;8BACG,cAAA,8OAAC;;0CACG,8OAAC;0CACG,cAAA,8OAAC;8CACG,cAAA,8OAAC;;;;;;;;;;;;;;;0CAGT,8OAAC;;kDACG,8OAAC;kDACI,OAAO,MAAM;;;;;;kDAElB,8OAAC;kDACG,cAAA,8OAAC;sDACI,OAAO,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOtC,8OAAC;0BACG,cAAA,8OAAC;8BAAG,OAAO,SAAS;;;;;;;;;;;0BAExB,8OAAC;0BACG,cAAA,8OAAC;8BAAG,OAAO,IAAI;;;;;;;;;;;0BAEnB,8OAAC;0BACG,cAAA,8OAAC;8BAAG,OAAO,MAAM;;;;;;;;;;;0BAErB,8OAAC;0BACG,cAAA,8OAAC;;wBAAG,OAAO,OAAO,kBAAkB,GAAG,QAAQ;wBAAG;;;;;;;;;;;;;;;;;;AAIlE;AAEA,SAAS;IACL,qBACI,8OAAC;kBACG,cAAA,8OAAC;;8BACG,8OAAC;8BACG,cAAA,8OAAC;;4BAAI;0CACG,8OAAC;;;;;;;;;;;;;;;;8BAGb,8OAAC;8BACG,cAAA,8OAAC;;4BAAI;0CACI,8OAAC;;;;;;;;;;;;;;;;8BAGd,8OAAC;8BACG,cAAA,8OAAC;;4BAAI;0CACS,8OAAC;;;;;;;;;;;;;;;;8BAGnB,8OAAC;8BACG,cAAA,8OAAC;;4BAAI;0CAED,8OAAC;;kDACG,8OAAC;;;;;kDACD,8OAAC;;;;;;;;;;;;;;;;;;;;;;8BAIb,8OAAC;8BACG,cAAA,8OAAC;;4BAAI;0CACU,8OAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMpC"}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}